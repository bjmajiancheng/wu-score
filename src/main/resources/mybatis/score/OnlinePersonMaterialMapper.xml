<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wutuobang.score.dao.IOnlinePersonMaterialDao">

    <resultMap id="OnlinePersonMaterial" type="com.wutuobang.score.model.OnlinePersonMaterialModel">
        <result property="id" column="id"/>
        <result property="personId" column="person_id"/>
        <result property="batchId" column="batch_id"/>
		<result property="materialInfoId" column="material_info_id"/>
        <result property="materialId" column="material_id"/>
        <result property="materialName" column="material_name"/>
        <result property="materialUri" column="material_uri"/>
        <result property="status" column="status"/>
		<result property="reason" column="reason"/>
        <result property="ctime" column="c_time"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,person_id ,batch_id , material_info_id,material_id ,material_name ,material_uri ,status ,reason, c_time
	    ]]>
	</sql>
	
    <insert id="insert" >
		<selectKey keyProperty="id" resultType="int" order="BEFORE">
			select t_online_person_material_seq.NEXTVAL from dual
		</selectKey>
    <![CDATA[
        INSERT INTO t_online_person_material (
	        id  ,
	        person_id  ,
	        batch_id  ,
	        material_info_id  ,
	        material_id  ,
	        material_name  ,
	        material_uri  ,
	        status  ,
	        reason  ,
	        c_time  
        ) VALUES (
        	${id} ,
        	#{personId, jdbcType=INTEGER} ,
        	#{batchId, jdbcType=INTEGER} ,
        	#{materialInfoId, jdbcType=INTEGER},
        	#{materialId, jdbcType=INTEGER} ,
        	#{materialName, jdbcType=VARCHAR} ,
        	#{materialUri, jdbcType=VARCHAR} ,
        	#{status, jdbcType=INTEGER} ,
        	#{reason, jdbcType=VARCHAR},
        	#{ctime, jdbcType=TIMESTAMP} 
        )
    ]]>
    </insert>

    <update id="update" >
        UPDATE t_online_person_material SET
	        <if test="personId != null">person_id = #{personId, jdbcType=INTEGER} ,</if>
	        <if test="batchId != null">batch_id = #{batchId, jdbcType=INTEGER} ,</if>
			<if test="materialInfoId != null">material_info_id = #{materialInfoId, jdbcType=INTEGER} ,</if>
	        <if test="materialId != null">material_id = #{materialId, jdbcType=INTEGER} ,</if>
	        <if test="materialName != null">material_name = #{materialName, jdbcType=VARCHAR} ,</if>
	        <if test="materialUri != null">material_uri = #{materialUri, jdbcType=VARCHAR} ,</if>
			<if test="status != null">status = #{status, jdbcType=INTEGER} ,</if>
			<if test="reason != null">reason = #{reason, jdbcType=VARCHAR} ,</if>
	        <if test="ctime != null">c_time = #{ctime, jdbcType=TIMESTAMP} ,</if>
			id = #{id}
		WHERE
	        id = #{id} 
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM t_online_person_material WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="OnlinePersonMaterial">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM t_online_person_material 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
			<if test="materialName != null">
				AND material_name = #{materialName}
			</if>
			<if test="materialUri != null">
				AND material_uri = #{materialUri}
			</if>
			<if test="personId != null">
				AND person_id = #{personId}
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="int">
        SELECT count(*) FROM t_online_person_material <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="OnlinePersonMaterial">
    	SELECT <include refid="columns"/> FROM t_online_person_material 
		<include refid="findWhere"/>
		<if test="sortColumns != null">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<select id="find" resultMap="OnlinePersonMaterial">
	    SELECT <include refid="columns"/> FROM t_online_person_material 
		<include refid="findWhere"/>
		<if test="sortColumns != null">
			ORDER BY ${sortColumns}
		</if>
    </select>

	<insert id="batchInsert">
		INSERT INTO t_online_person_material(id, person_id, batch_id, material_info_id, material_id, material_name, material_uri, status, c_time)
		VALUES
		<foreach collection="onlinePersonMaterialModels" item="item" separator=",">
			(t_online_person_material_seq.nextval, #{item.personId}, #{item.batchId}, #{item.materialInfoId}, #{item.materialId}, #{item.materialName}, #{item.materialUri}, #{item.status}, #{item.ctime})
		</foreach>
	</insert>

	<update id="deleteByPersonId">
		UPDATE t_online_person_material
		SET status = 2
		where person_id = #{personId}
	</update>

	<update id="delByIds">
		UPDATE t_online_person_material
		SET status = 2
		where id IN
		<foreach collection="ids" item="item" separator="," open="(" close=")">
			#{item}
		</foreach>
	</update>

	<select id="getByPersonId" resultMap="OnlinePersonMaterial">
		SELECT <include refid="columns"/> FROM t_online_person_material
		WHERE person_id = #{personId} AND status IN(0, 1)
	</select>
	
</mapper>

