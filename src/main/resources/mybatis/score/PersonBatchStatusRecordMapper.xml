<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wutuobang.score.dao.IPersonBatchStatusRecordDao">

    <resultMap id="PersonBatchStatusRecord" type="com.wutuobang.score.model.PersonBatchStatusRecordModel">
        <result property="id" column="id"/>
        <result property="batchId" column="batch_id"/>
        <result property="personId" column="person_id"/>
        <result property="personIdNumber" column="person_id_number"/>
        <result property="statusDictAlias" column="status_dict_alias"/>
        <result property="statusTypeDesc" column="status_type_desc"/>
        <result property="statusInt" column="status_int"/>
        <result property="statusStr" column="status_str"/>
        <result property="statusTime" column="status_time"/>
        <result property="statusReason" column="status_reason"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,batch_id ,person_id ,person_id_number ,status_dict_alias ,status_type_desc ,status_int ,status_str ,status_time ,status_reason 
	    ]]>
	</sql>
	
    <insert id="insert" >
    <![CDATA[
        INSERT INTO t_person_batch_status_record (
	        id  ,
	        batch_id  ,
	        person_id  ,
	        person_id_number  ,
	        status_dict_alias  ,
	        status_type_desc  ,
	        status_int  ,
	        status_str  ,
	        status_time  ,
	        status_reason  
        ) VALUES (
        	t_status_record_seq.nextval ,
        	#{batchId, jdbcType=INTEGER} ,
        	#{personId, jdbcType=INTEGER} ,
        	#{personIdNumber, jdbcType=VARCHAR} ,
        	#{statusDictAlias, jdbcType=VARCHAR} ,
        	#{statusTypeDesc, jdbcType=VARCHAR} ,
        	#{statusInt, jdbcType=INTEGER} ,
        	#{statusStr, jdbcType=VARCHAR} ,
        	#{statusTime, jdbcType=TIMESTAMP} ,
        	#{statusReason, jdbcType=VARCHAR} 
        )
    ]]>
    </insert>

    <update id="update" >
        UPDATE t_person_batch_status_record SET
	        <if test="batchId != null">batch_id = #{batchId, jdbcType=INTEGER} ,</if>
	        <if test="personId != null">person_id = #{personId, jdbcType=INTEGER} ,</if>
	        <if test="personIdNumber != null">person_id_number = #{personIdNumber, jdbcType=VARCHAR} ,</if>
	        <if test="statusDictAlias != null">status_dict_alias = #{statusDictAlias, jdbcType=VARCHAR} ,</if>
	        <if test="statusTypeDesc != null">status_type_desc = #{statusTypeDesc, jdbcType=VARCHAR} ,</if>
	        <if test="statusInt != null">status_int = #{statusInt, jdbcType=INTEGER} ,</if>
	        <if test="statusStr != null">status_str = #{statusStr, jdbcType=VARCHAR} ,</if>
	        <if test="statusTime != null">status_time = #{statusTime, jdbcType=TIMESTAMP} ,</if>
	        <if test="statusReason != null">status_reason = #{statusReason, jdbcType=VARCHAR} </if>
        WHERE 
	        id = #{id} 
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM t_person_batch_status_record WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="PersonBatchStatusRecord">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM t_person_batch_status_record 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
					<if test="personIdNumber != null">
						AND person_id_number = #{personIdNumber}
					</if>
					<if test="statusDictAlias != null">
						AND status_dict_alias = #{statusDictAlias}
					</if>
					<if test="statusTypeDesc != null">
						AND status_type_desc = #{statusTypeDesc}
					</if>
					<if test="statusStr != null">
						AND status_str = #{statusStr}
					</if>
					<if test="statusReason != null">
						AND status_reason = #{statusReason}
					</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="int">
        SELECT count(*) FROM t_person_batch_status_record <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="PersonBatchStatusRecord">
    	SELECT <include refid="columns"/> FROM t_person_batch_status_record 
		<include refid="findWhere"/>
		<if test="sortColumns != null">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<select id="find" resultMap="PersonBatchStatusRecord">
	    SELECT <include refid="columns"/> FROM t_person_batch_status_record 
		<include refid="findWhere"/>
		<if test="sortColumns != null">
			ORDER BY ${sortColumns}
		</if>
    </select>

	<insert id="batchInsert">
		INSERT INTO t_person_batch_status_record(id, batch_id, person_id, person_id_number, status_dict_alias, status_type_desc, status_int,
	        status_str, status_time, status_reason) VALUES
	  	<foreach collection="personBatchStatusRecords" item="item" separator=",">
			(t_status_record_seq.nextval, #{item.batchId}, #{item.personId}, #{item.personIdNumber}, #{item.statusDictAlias}, #{item.statusTypeDesc}, #{item.statusInt},
			#{item.statusStr}, #{item.statusTime}, #{item.statusReason})
		</foreach>
	</insert>
	
</mapper>

