<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wutuobang.score.dao.IPbScoreRecordDao">
    <resultMap id="PbScoreRecord" type="com.wutuobang.score.model.PbScoreRecordModel">
        <result property="id" column="id"/>
        <result property="accept_number" column="accept_number"/>
        <result property="batch_id" column="batch_id"/>
        <result property="indicator_id" column="indicator_id"/>
        <result property="indicator_name" column="indicator_name"/>
        <result property="person_id" column="person_id"/>
        <result property="person_name" column="person_name"/>
        <result property="person_id_num" column="person_id_num"/>
        <result property="person_mobile_phone" column="person_mobile_phone"/>
        <result property="company_id" column="company_id"/>
        <result property="company_name" column="company_name"/>
        <result property="status" column="status"/>
        <result property="score_value" column="score_value"/>
        <result property="item_id" column="item_id"/>
        <result property="accept_date" column="accept_date"/>
        <result property="submit_date" column="submit_date"/>
        <result property="score_date" column="score_date"/>
        <result property="op_user_id" column="op_user_id"/>
        <result property="op_user" column="op_user"/>
        <result property="op_role_id" column="op_role_id"/>
        <result property="op_role" column="op_role"/>
        <result property="score_detail" column="score_detail"/>
        <result property="c_time" column="c_time"/>
        <result property="accept_address_id" column="accept_address_id"/>
        <result property="toreviewreason" column="toreviewreason"/>
        <result property="toreviewtime" column="toreviewtime"/>
        <result property="idreviewend" column="idreviewend"/>
        <result property="scoreReason" column="scoreReason"/>
    </resultMap>

    <sql id="columns">
        <![CDATA[
        id,accept_number,batch_id,indicator_id,indicator_name,person_id,person_name,person_id_num,person_mobile_phone,company_id,company_name,
        status,score_value,item_id,accept_date,submit_date,score_date,op_user_id,op_user,op_role_id,op_role,score_detail,c_time,accept_address_id,
        toreviewreason,toreviewtime,idreviewend,isdeducted,original_score_value,useful,scoreReason
	    ]]>
    </sql>

    <update id="update">
        update t_pb_score_record set
        <if test="person_name!=null">person_name=#{person_name,jdbcType=VARCHAR},</if>
        <if test="person_id_num!=null">person_id_num=#{person_id_num,jdbcType=VARCHAR},</if>
        <if test="indicator_name!=null">indicator_name=#{indicator_name,jdbcType=VARCHAR},</if>
        <if test="toreviewreason!=null">toreviewreason=#{toreviewreason,jdbcType=VARCHAR},</if>
        <if test="toreviewtime!=null">toreviewtime=#{toreviewtime,jdbcType=TIMESTAMP},</if>
        <if test="status != null">status = #{status, jdbcType=INTEGER} ,</if>
        id = #{id}
        WHERE
            id = #{id}
    </update>

    <!-- 得到所有的打分指标项 -->
    <select id="getByPersonId2" resultMap="PbScoreRecord">
    SELECT *	 FROM t_pb_score_record
    <where>
        <if test="id != null">
            AND  person_id= #{id}
        </if>
    </where>
    </select>

    <!--使用union all 来处理，以区分居住（、规自局）、住房所在区-->
    <select id="getByPersonId" resultMap="PbScoreRecord">
        select * from (
        SELECT ID,ACCEPT_NUMBER,BATCH_ID,INDICATOR_ID,INDICATOR_NAME,PERSON_ID,PERSON_NAME,PERSON_ID_NUM,PERSON_MOBILE_PHONE,COMPANY_ID,COMPANY_NAME
        ,STATUS,SCORE_VALUE,ITEM_ID,ACCEPT_DATE,SUBMIT_DATE,SCORE_DATE,OP_USER_ID,OP_USER,OP_ROLE_ID,OP_ROLE,SCORE_DETAIL,C_TIME,ACCEPT_ADDRESS_ID,
        ORIGINAL_SCORE_VALUE,ISDEDUCTED,TOREVIEWREASON,TOREVIEWTIME,IDREVIEWEND,USEFUL,SORT,SCOREREASON
        FROM t_pb_score_record
        <where>
            <if test="id != null">
                AND  person_id= #{id}
                and INDICATOR_id not in ('1020', '1003','1022', '1025', '1030', '1021', '1031')
            </if>
        </where>
        union all
        select t1.ID,t1.ACCEPT_NUMBER,t1.BATCH_ID,t1.INDICATOR_ID,t1.INDICATOR_NAME,t1.PERSON_ID,
        t1.PERSON_NAME,t1.PERSON_ID_NUM,t1.PERSON_MOBILE_PHONE,t1.COMPANY_ID,t1.COMPANY_NAME,
        t1.STATUS,t1.SCORE_VALUE,t1.ITEM_ID,t1.ACCEPT_DATE,t1.SUBMIT_DATE,t1.SCORE_DATE,
        t1.OP_USER_ID,t1.OP_USER,t1.OP_ROLE_ID,t1.OP_ROLE,t1.SCORE_DETAIL,t1.C_TIME,
        t1.ACCEPT_ADDRESS_ID,t1.ORIGINAL_SCORE_VALUE,t1.ISDEDUCTED,t1.TOREVIEWREASON,
        t1.TOREVIEWTIME,t1.IDREVIEWEND,t1.USEFUL,t1.SORT,t1.SCOREREASON
        from t_pb_score_record t1, t_identity_info t2
        where person_id= #{id}
        and t1.INDICATOR_id in ('1022')
        and t1.person_id = t2.id
        and t2.is201826doc = 1

        union all

        select min(ID) ID,
        min(ACCEPT_NUMBER) ACCEPT_NUMBER,
        min(BATCH_ID) BATCH_ID,
        min(INDICATOR_ID) INDICATOR_ID,
        case when min(INDICATOR_NAME) is not null then '住房' end INDICATOR_NAME,
        min(PERSON_ID) PERSON_ID,
        min(PERSON_NAME) PERSON_NAME,
        min(PERSON_ID_NUM) PERSON_ID_NUM,
        min(PERSON_MOBILE_PHONE) PERSON_MOBILE_PHONE,
        min(COMPANY_ID) COMPANY_ID,
        min(COMPANY_NAME) COMPANY_NAME,
        max(STATUS) STATUS,
        sum(SCORE_VALUE) SCORE_VALUE,
        min(ITEM_ID) ITEM_ID,
        min(ACCEPT_DATE) ACCEPT_DATE,
        min(SUBMIT_DATE) SUBMIT_DATE,
        min(SCORE_DATE) SCORE_DATE,
        min(OP_USER_ID) OP_USER_ID,
        min(OP_USER) OP_USER,
        min(OP_ROLE_ID) OP_ROLE_ID,
        min(OP_ROLE) OP_ROLE,
        min(SCORE_DETAIL) SCORE_DETAIL,
        min(C_TIME) C_TIME,
        min(ACCEPT_ADDRESS_ID) ACCEPT_ADDRESS_ID,
        min(ORIGINAL_SCORE_VALUE) ORIGINAL_SCORE_VALUE,
        min(ISDEDUCTED) ISDEDUCTED,
        min(TOREVIEWREASON) TOREVIEWREASON,
        min(TOREVIEWTIME) TOREVIEWTIME,
        min(IDREVIEWEND) IDREVIEWEND,
        min(USEFUL) USEFUL,
        min(sort) sort,
        min(SCOREREASON) SCOREREASON
        from t_pb_score_record
        where person_id= #{id}
        and INDICATOR_id in ('1025', '1030', '1020','1021', '1031')
        ) order by sort asc

    </select>

    <select id="getPublicList" resultMap="PbScoreRecord">
          select t2.person_id_num,t1.id,t2.person_name,t2.score_value from t_identity_info t1,
                (
                select a.person_id_num,max(a.person_name) person_name,round(nvl(sum(a.SCORE), 0),2) score_value
                from
                    (
                        select t.PERSON_NAME, t.OP_ROLE, t.person_id_num, t.score_value as score  from t_pb_score_record t where t.indicator_id not in (3,14,1003,1022, 1025, 1030, 1021, 1031)   and batch_id = #{batch_id}
                        union all
                        select max(t.PERSON_NAME) PERSON_NAME, max(t.OP_ROLE) OP_ROLE, t.person_id_num, max(t.score_value) as score from t_pb_score_record t where t.indicator_id=3 and t.batch_id = #{batch_id} group by t.person_id_num
                        union all
                        select max(t.PERSON_NAME) PERSON_NAME, max(t.OP_ROLE) OP_ROLE, t.person_id_num, decode(sum(t.score_value),40,20,0) as score  from t_pb_score_record t where t.indicator_id=14 and t.batch_id = #{batch_id}  group by t.person_id_num
                        union all
                        select t1.PERSON_NAME, t1.OP_ROLE, t1.person_id_num, t1.score_value as score        from t_pb_score_record t1, t_identity_info t2
                        where  t1.INDICATOR_id in ('1022')        and t1.person_id = t2.id    and t2.is201826doc = 1  and t1.batch_id = #{batch_id}
                        union all
                        select  min(person_name) person_name,min(op_role) op_role,min(PERSON_ID_NUM) person_id_num,sum(score_value) score
                        from t_pb_score_record
                        where INDICATOR_id in ('1025', '1030', '1021', '1031') and batch_id = #{batch_id} group by person_id_num
                    ) a
                group by a.person_id_num  order by score_value desc
                ) t2
            where upper(t1.id_number) = upper(t2.person_id_num)  and t1.CANCEL_STATUS=0 and t1.batch_id=#{batch_id}
    </select>

    <!-- 分页查询 -->
    <select id="findPublicPage" resultMap="PbScoreRecord">
        select t2.person_id_num,t1.id,t2.person_name,t2.score_value from t_identity_info t1,
        (
        select a.person_id_num,max(a.person_name) person_name,round(nvl(sum(a.SCORE), 0),2) score_value
        from
        (
        select t.PERSON_NAME, t.OP_ROLE, t.person_id_num, t.score_value as score  from t_pb_score_record t where t.indicator_id not in (3,14,1003,1022, 1025, 1030, 1021, 1031)   and batch_id = #{batch_id}
        union all
        select max(t.PERSON_NAME) PERSON_NAME, max(t.OP_ROLE) OP_ROLE, t.person_id_num, max(t.score_value) as score from t_pb_score_record t where t.indicator_id=3 and t.batch_id = #{batch_id} group by t.person_id_num
        union all
        select max(t.PERSON_NAME) PERSON_NAME, max(t.OP_ROLE) OP_ROLE, t.person_id_num, decode(sum(t.score_value),40,20,0) as score  from t_pb_score_record t where t.indicator_id=14 and t.batch_id = #{batch_id}  group by t.person_id_num
        union all
        select t1.PERSON_NAME, t1.OP_ROLE, t1.person_id_num, t1.score_value as score        from t_pb_score_record t1, t_identity_info t2
                          where  t1.INDICATOR_id in ('1022')        and t1.person_id = t2.id    and t2.is201826doc = 1  and t1.batch_id = #{batch_id}
        union all
        select  min(person_name) person_name,min(op_role) op_role,min(PERSON_ID_NUM) person_id_num,sum(score_value) score
        from t_pb_score_record
        where INDICATOR_id in ('1025', '1030', '1021', '1031') and batch_id = #{batch_id} group by person_id_num
        ) a
        group by a.person_id_num  order by score_value desc
        ) t2

        <where>
            upper(t1.id_number) = upper(t2.person_id_num) and t1.CANCEL_STATUS=0 and t1.batch_id=#{batch_id}
            <!--<if test="indicatorType == 0">
                AND rownum &lt;= ${indicatorValue}
            </if>-->
            <if test="indicatorValue !=null">
                AND t2.score_value &gt;=${scoreValue} order by score_value desc
            </if>
        </where>
    </select>

    <select id="findPublicPageCount" resultType="int">
        select count(1) from t_identity_info t1,
        (
        select a.person_id_num,max(a.person_name) person_name,round(nvl(sum(a.SCORE), 0),2) score_value
        from
        (
        select t.PERSON_NAME, t.OP_ROLE, t.person_id_num, t.score_value as score  from t_pb_score_record t where t.indicator_id not in (3,14,1003,1022, 1025, 1030, 1021, 1031)   and batch_id = #{batch_id}
        union all
        select max(t.PERSON_NAME) PERSON_NAME, max(t.OP_ROLE) OP_ROLE, t.person_id_num, max(t.score_value) as score from t_pb_score_record t where t.indicator_id=3 and t.batch_id = #{batch_id} group by t.person_id_num
        union all
        select max(t.PERSON_NAME) PERSON_NAME, max(t.OP_ROLE) OP_ROLE, t.person_id_num, decode(sum(t.score_value),40,20,0) as score  from t_pb_score_record t where t.indicator_id=14 and t.batch_id = #{batch_id}  group by t.person_id_num
        union all
        select t1.PERSON_NAME, t1.OP_ROLE, t1.person_id_num, t1.score_value as score        from t_pb_score_record t1, t_identity_info t2
        where  t1.INDICATOR_id in ('1022')        and t1.person_id = t2.id    and t2.is201826doc = 1  and t1.batch_id = #{batch_id}
        union all
        select  min(person_name) person_name,min(op_role) op_role,min(PERSON_ID_NUM) person_id_num,sum(score_value) score
        from t_pb_score_record
        where INDICATOR_id in ('1025', '1030', '1021', '1031') and batch_id = #{batch_id} group by person_id_num
        ) a
        group by a.person_id_num  order by score_value desc
        ) t2

        <where>
            upper(t1.id_number) = upper(t2.person_id_num) and t1.CANCEL_STATUS=0 and t1.batch_id=#{batch_id}
                AND t2.score_value >=${scoreValue}
        </where>
    </select>
    
    <select id="findOnePbScoreRecord" resultMap="PbScoreRecord">
        select t2.person_id_num,t1.id,t2.person_name,t2.score_value from t_identity_info t1,
        (
        select a.person_id_num,max(a.person_name) person_name,round(nvl(sum(a.SCORE), 0),2) score_value
        from
        (
        select t.PERSON_NAME, t.OP_ROLE, t.person_id_num, t.score_value as score  from t_pb_score_record t where t.indicator_id not in (3,14,1003,1022, 1025, 1030, 1021, 1031)   and batch_id = #{batch_id}
        union all
        select max(t.PERSON_NAME) PERSON_NAME, max(t.OP_ROLE) OP_ROLE, t.person_id_num, max(t.score_value) as score from t_pb_score_record t where t.indicator_id=3 and t.batch_id = #{batch_id} group by t.person_id_num
        union all
        select max(t.PERSON_NAME) PERSON_NAME, max(t.OP_ROLE) OP_ROLE, t.person_id_num, decode(sum(t.score_value),40,20,0) as score  from t_pb_score_record t where t.indicator_id=14 and t.batch_id = #{batch_id}  group by t.person_id_num
        union all
        select t1.PERSON_NAME, t1.OP_ROLE, t1.person_id_num, t1.score_value as score        from t_pb_score_record t1, t_identity_info t2
        where  t1.INDICATOR_id in ('1022')        and t1.person_id = t2.id    and t2.is201826doc = 1  and t1.batch_id = #{batch_id}
        union all
        select  min(person_name) person_name,min(op_role) op_role,min(PERSON_ID_NUM) person_id_num,sum(score_value) score
        from t_pb_score_record
        where INDICATOR_id in ('1025', '1030', '1021', '1031') and batch_id = #{batch_id} group by person_id_num
        ) a
        group by a.person_id_num  order by score_value desc
        ) t2

        <where>
            upper(t1.id_number) = upper(t2.person_id_num) and t1.CANCEL_STATUS=0 and t1.batch_id=#{batch_id}

            <if test="id_number != null">
                AND t2.person_id_num='${id_number}' order by score_value desc
            </if>
        </where>
    </select>

</mapper>